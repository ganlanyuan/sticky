{"version":3,"sources":["requestAnimationFrame.js","Length.js","base.js","optimizedResize.js","extend.js","DOM.ready.js","isNodeList.js","wrap.js","unwrap.js","sticky.native.js"],"names":["Date","now","getTime","vendors","i","length","window","requestAnimationFrame","vp","cancelAnimationFrame","test","navigator","userAgent","lastTime","callback","nextTime","Math","max","setTimeout","clearTimeout","document","undefined","toPx","elem","value","prop","force","style","inlineValue","ret","unit","match","runit","conversion","convert","rem","docElement","parentNode","parseFloat","curCSS","e","pixel","innerHeight","parent","rvpos","outerProp","getComputedStyle","charAt","toUpperCase","slice","currentStyle","computedValueBug","offsetHeight","testElem","createElement","documentElement","defaultView","conversions","units","appendChild","marginTop","inToPx","removeChild","Length","this","gn","g","optimizedResize","resize","running","runCallbacks","callbacks","forEach","addCallback","push","add","addEventListener","extend","obj","name","copy","target","arguments","ready","fn","readyState","isNodeList","el","item","wrap","els","elsNew","wrapper","cloneNode","sibling","nextSibling","insertBefore","unwrap","firstChild","sticky","options","Core","stickyClassNames","className","isInRange","isWrapped","isSticking","isFixed","isAbsolute","stickyRectEdge","containerRectEdge","init","scope","onResize","ticking","jsWrapper","getBoundingClientRect","POSITION","CONTAINER","bottom","onScroll","container","padding","position","breakpoints","BP","PADDING","WINDOWWIDTH","innerWidth","WINDOWHEIGHT","prototype","wrapSticky","indexOf","getFixedBreakpoint","getAbsoluteBreakpoint","stickyHeight","updateSizes","pattern","left","exec","marginLeft","parseInt","right","marginRight","top","marginBottom","stickyWidth","clientWidth","isFixedBreakpoint","isAbsoluteBreakpoint","destory","width","replace","checkRange","Array","isArray","height","stickyEls","querySelectorAll","arr","Error","querySelector"],"mappings":"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","file":"sticky.js","sourcesContent":["// Adapted from https://gist.github.com/paulirish/1579671 which derived from \n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n\n// requestAnimationFrame polyfill by Erik MÃ¶ller.\n// Fixes from Paul Irish, Tino Zijdel, Andrew Mao, Klemen SlaviÄ, Darius Bacon\n\n// MIT license\n\nif (!Date.now)\n    Date.now = function() { return new Date().getTime(); };\n\n(function() {\n    'use strict';\n    \n    var vendors = ['webkit', 'moz'];\n    for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n        var vp = vendors[i];\n        window.requestAnimationFrame = window[vp+'RequestAnimationFrame'];\n        window.cancelAnimationFrame = (window[vp+'CancelAnimationFrame']\n                                   || window[vp+'CancelRequestAnimationFrame']);\n    }\n    if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) // iOS6 is buggy\n        || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n        var lastTime = 0;\n        window.requestAnimationFrame = function(callback) {\n            var now = Date.now();\n            var nextTime = Math.max(lastTime + 16, now);\n            return setTimeout(function() { callback(lastTime = nextTime); },\n                              nextTime - now);\n        };\n        window.cancelAnimationFrame = clearTimeout;\n    }\n}());\n","(function(window, document, undefined){\n\"use strict\";\n\n// create a test element\nvar testElem = document.createElement('test'),\n    docElement = document.documentElement,\n    defaultView = document.defaultView,\n    getComputedStyle = defaultView && defaultView.getComputedStyle,\n    computedValueBug,\n    runit = /^(-?[\\d+\\.\\-]+)([a-z]+|%)$/i,\n    convert = {},\n    conversions = [1/25.4, 1/2.54, 1/72, 1/6],\n    units = ['mm', 'cm', 'pt', 'pc', 'in', 'mozmm'],\n    i = 6; // units.length\n\n// add the test element to the dom\ndocElement.appendChild(testElem);\n\n// test for the WebKit getComputedStyle bug\n// @see http://bugs.jquery.com/ticket/10639\nif (getComputedStyle) {\n    // add a percentage margin and measure it\n    testElem.style.marginTop = '1%';\n    computedValueBug = getComputedStyle(testElem).marginTop === '1%';\n}\n\n// pre-calculate absolute unit conversions\nwhile(i--) {\n    convert[units[i] + \"toPx\"] = conversions[i] ? conversions[i] * convert.inToPx : toPx(testElem, '1' + units[i]);\n}\n\n// remove the test element from the DOM and delete it\ndocElement.removeChild(testElem);\ntestElem = undefined;\n\n// convert a value to pixels\nfunction toPx(elem, value, prop, force) {\n    // use width as the default property, or specify your own\n    prop = prop || 'width';\n\n    var style,\n        inlineValue,\n        ret,\n        unit = (value.match(runit)||[])[2],\n        conversion = unit === 'px' ? 1 : convert[unit + 'toPx'],\n        rem = /r?em/i;\n\n    if (conversion || rem.test(unit) && !force) {\n        // calculate known conversions immediately\n        // find the correct element for absolute units or rem or fontSize + em or em\n        elem = conversion ? elem : unit === 'rem' ? docElement : prop === 'fontSize' ? elem.parentNode || elem : elem;\n\n        // use the pre-calculated conversion or fontSize of the element for rem and em\n        conversion = conversion || parseFloat(curCSS(elem, 'fontSize'));\n\n        // multiply the value by the conversion\n        ret = parseFloat(value) * conversion;\n    } else {\n        // begin \"the awesome hack by Dean Edwards\"\n        // @see http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291\n\n        // remember the current style\n        style = elem.style;\n        inlineValue = style[prop];\n\n        // set the style on the target element\n        try {\n            style[prop] = value;\n        } catch(e) {\n            // IE 8 and below throw an exception when setting unsupported units\n            return 0;\n        }\n\n        // read the computed value\n        // if style is nothing we probably set an unsupported unit\n        ret = !style[prop] ? 0 : parseFloat(curCSS(elem, prop));\n\n        // reset the style back to what it was or blank it out\n        style[prop] = inlineValue !== undefined ? inlineValue : null;\n    }\n\n    // return a number\n    return ret;\n}\n\n// return the computed value of a CSS property\nfunction curCSS(elem, prop) {\n    var value,\n        pixel,\n        unit,\n        rvpos = /^top|bottom/,\n        outerProp = [\"paddingTop\", \"paddingBottom\", \"borderTop\", \"borderBottom\"],\n        innerHeight,\n        parent,\n        i = 4; // outerProp.length\n    \n    if (getComputedStyle) {\n        // FireFox, Chrome/Safari, Opera and IE9+\n        value = getComputedStyle(elem)[prop];\n    } else if (pixel = elem.style['pixel' + prop.charAt(0).toUpperCase() + prop.slice(1)]) {\n        // IE and Opera support pixel shortcuts for top, bottom, left, right, height, width\n        // WebKit supports pixel shortcuts only when an absolute unit is used\n        value = pixel + 'px';\n    } else if (prop === 'fontSize') {\n        // correct IE issues with font-size\n        // @see http://bugs.jquery.com/ticket/760\n        value = toPx(elem, '1em', 'left', 1) + 'px';\n    } else {\n        // IE 8 and below return the specified style\n        value = elem.currentStyle[prop];\n    }\n\n    // check the unit\n    unit = (value.match(runit)||[])[2];\n    if (unit === '%' && computedValueBug) {\n        // WebKit won't convert percentages for top, bottom, left, right, margin and text-indent\n        if (rvpos.test(prop)) {\n            // Top and bottom require measuring the innerHeight of the parent.\n            innerHeight = (parent = elem.parentNode || elem).offsetHeight;\n            while (i--) {\n              innerHeight -= parseFloat(curCSS(parent, outerProp[i]));\n            }\n            value = parseFloat(value) / 100 * innerHeight + 'px';\n        } else {\n            // This fixes margin, left, right and text-indent\n            // @see https://bugs.webkit.org/show_bug.cgi?id=29084\n            // @see http://bugs.jquery.com/ticket/10639\n            value = toPx(elem, value);\n        }\n    } else if ((value === 'auto' || (unit && unit !== 'px')) && getComputedStyle) {\n        // WebKit and Opera will return auto in some cases\n        // Firefox will pass back an unaltered value when it can't be set, like top on a static element\n        value = 0;\n    } else if (unit && unit !== 'px' && !getComputedStyle) {\n        // IE 8 and below won't convert units for us\n        // try to convert using a prop that will return pixels\n        // this will be accurate for everything (except font-size and some percentages)\n        value = toPx(elem, value) + 'px';\n    }\n    return value;\n}\n\n// expose the conversion function to the window object\nwindow.Length = {\n    toPx: toPx\n};\n}(this, this.document));","// *** gn *** //\nvar gn = (function (g) {\n\n  // return gn\n  return g;\n})(window.gn || {});","// optimizedResize\n// https://developer.mozilla.org/en-US/docs/Web/Events/resize#requestAnimationFrame\n// @require \"/src/gn/base.js\"\n// @require \"/src/es5/arrays/forEach.js\"\n// @require \"/src/ie8/addEventListener.js\"\n\ngn.optimizedResize = (function() {\n\n  var callbacks = [],\n  running = false;\n\n  // fired on resize event\n  function resize() {\n\n    if (!running) {\n      running = true;\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(runCallbacks);\n      } else {\n        setTimeout(runCallbacks, 66);\n      }\n    }\n\n  }\n\n  // run the actual callbacks\n  function runCallbacks() {\n\n    callbacks.forEach(function(callback) {\n      callback();\n    });\n\n    running = false;\n  }\n\n  // adds callback to loop\n  function addCallback(callback) {\n\n    if (callback) {\n      callbacks.push(callback);\n    }\n\n  }\n\n  return {\n    // public method to add additional callback\n    add: function(callback) {\n      if (!callbacks.length) {\n        window.addEventListener('resize', resize);\n      }\n      addCallback(callback);\n    }\n  };\n}());\n\n// start process\n// gn.optimizedResize.add(function() {\n//   console.log('Resource conscious resize callback!')\n// });","// extend\n// @require \"/src/gn/base.js\"\n\ngn.extend = function () {\n  var obj, name, copy,\n  target = arguments[0] || {},\n  i = 1,\n  length = arguments.length;\n\n  for (; i < length; i++) {\n    if ((obj = arguments[i]) !== null) {\n      for (name in obj) {\n        copy = obj[name];\n\n        if (target === copy) {\n          continue;\n        } else if (copy !== undefined) {\n          target[name] = copy;\n        }\n      }\n    }\n  }\n  return target;\n};","// DOM ready\n// @require \"/src/gn/base.js\"\n\ngn.ready = function ( fn ) {\n\n  // Sanity check\n  if ( typeof fn !== 'function' ) { return; }\n\n  // If document is already loaded, run method\n  if ( document.readyState === 'complete'  ) {\n    return fn();\n  }\n\n  // Otherwise, wait until document is loaded\n  document.addEventListener( 'DOMContentLoaded', fn, false );\n};","// isNodeList\n// @require \"/src/gn/base.js\"\n\ngn.isNodeList = function (el) {\n  // Only NodeList has the \"item()\" function\n  return typeof el.item !== 'undefined'; \n};\n","// wrap\n// @require \"/src/gn/base.js\"\n// @require \"/src/gn/isNodeList.js\"\n\ngn.wrap = function (els, obj) {\n    var elsNew = (gn.isNodeList(els)) ? els : [els];\n  // Loops backwards to prevent having to clone the wrapper on the\n  // first element (see `wrapper` below).\n  for (var i = elsNew.length; i--;) {\n      var wrapper = (i > 0) ? obj.cloneNode(true) : obj,\n          el = elsNew[i];\n\n      // Cache the current parent and sibling.\n      var parent = el.parentNode,\n          sibling = el.nextSibling;\n\n      // Wrap the element (is automatically removed from its current parent).\n      wrapper.appendChild(el);\n\n      // If the element had a sibling, insert the wrapper before\n      // the sibling to maintain the HTML structure; otherwise, just\n      // append it to the parent.\n      if (sibling) {\n          parent.insertBefore(wrapper, sibling);\n      } else {\n          parent.appendChild(wrapper);\n      }\n  }\n};\n\n","// unwrap\n// @require \"/src/gn/base.js\"\n// @require \"/src/gn/isNodeList.js\"\n\ngn.unwrap = function (els) {\n  var elsNew = (gn.isNodeList(els)) ? els : [els];\n  for (var i = elsNew.length; i--;) {\n    var el = elsNew[i];\n\n    // get the element's parent node\n    var parent = el.parentNode;\n    \n    // move all children out of the element\n    while (el.firstChild) { \n      parent.insertBefore(el.firstChild, el); \n    }\n    \n    // remove the empty element\n    parent.removeChild(el);\n  }\n};","/**\n  * sticky.native (works with go-native)\n  *\n  * v0.1.5\n  * @author William Lin\n  * @license The MIT License (MIT)\n  * https://github.com/ganlanyuan/sticky\n  */\n\nvar sticky = (function () {\n  'use strict';\n\n  return function (options) {\n    options = gn.extend({ \n      sticky: '.sticky',\n      container: false,\n      padding: 0,\n      position: 'top',\n      breakpoints: false,\n    }, options || {});\n\n    var BP = options.breakpoints,\n        CONTAINER,\n        PADDING = options.padding,\n        POSITION = options.position,\n        WINDOWWIDTH = window.innerWidth,\n        WINDOWHEIGHT = window.innerHeight;\n\n    function Core (sticky) {\n      this.sticky = sticky;\n      this.stickyClassNames = this.sticky.className;\n\n      this.isInRange = false;\n      this.isWrapped = false;\n      this.isSticking = false;\n      this.isFixed = false;\n      this.isAbsolute = false;\n      this.stickyRectEdge = 0;\n      this.containerRectEdge = false;\n\n      this.init(); \n\n      var scope = this;\n      gn.optimizedResize.add(function () { \n        scope.onResize(); \n      });\n\n      window.addEventListener('scroll', function () { \n        scope.ticking = false;\n        if (!scope.isWrapped) { return; }\n        scope.stickyRectEdge = scope.jsWrapper.getBoundingClientRect()[POSITION];\n        scope.containerRectEdge = (CONTAINER) ? CONTAINER.getBoundingClientRect().bottom : false;\n        if (!scope.ticking) {\n          window.requestAnimationFrame(function () {\n            if (scope.isWrapped) {\n              scope.onScroll(); \n            }\n            scope.ticking = false;\n          });\n        }\n        scope.ticking = true;\n      });\n    }\n\n    Core.prototype = {\n      // wrap sticky with a new <div>\n      // to track sticky width and BoundingClientRect\n      wrapSticky: function () {\n        var parent = this.sticky.parentNode;\n        if (parent.className.indexOf('sticky-container') !== -1) {\n          this.jsWrapper = parent;\n        } else {\n          this.jsWrapper = document.createElement('div');\n          this.jsWrapper.className = 'js-sticky-container';\n          gn.wrap(this.sticky, this.jsWrapper);\n        }\n\n        this.isWrapped = true;\n      },\n\n      // get pinned / fixed breakpoint\n      // based on sticky getBoundingClientRect().top/bottom\n      getFixedBreakpoint: function () {\n        if (POSITION === 'top') {\n          return PADDING;\n        } else {\n          return WINDOWHEIGHT - PADDING;\n        }\n      },\n\n      // get followed / absolute breakpoint\n      // based on container getBoundingClientRect().bottom\n      getAbsoluteBreakpoint: function () {\n        if (!CONTAINER) {\n          return false;\n        } else {\n          if (POSITION === 'top') {\n            return  this.stickyHeight + PADDING;\n          } else {\n            return WINDOWHEIGHT;\n          }\n        }\n      },\n\n      // update sizes:\n      // get sticky, container and window information to calculate\n      // two breakpoints: pinned to window / follow container\n      // \n      // do this on document load & window resize\n      updateSizes: function () {\n        var style = window.getComputedStyle(this.sticky),\n            pattern = /\\d/, // check if value contains digital number\n            left = (pattern.exec(style.marginLeft) === null) ? 0 : parseInt(Length.toPx(sticky, style.marginLeft)),\n            right = (pattern.exec(style.marginRight) === null) ? 0 : parseInt(Length.toPx(sticky, style.marginRight)),\n            top = (pattern.exec(style.marginTop) === null) ? 0 : parseInt(Length.toPx(sticky, style.marginTop)),\n            bottom = (pattern.exec(style.marginBottom) === null) ? 0 : parseInt(Length.toPx(sticky, style.marginBottom));\n\n        // update sizes, position and breakpoints\n        this.stickyWidth = this.jsWrapper.clientWidth - left - right;\n        this.stickyHeight = this.sticky.offsetHeight + top + bottom;\n\n        this.isFixedBreakpoint = this.getFixedBreakpoint();\n        this.isAbsoluteBreakpoint = this.getAbsoluteBreakpoint();\n      },\n\n      // destory:\n      // restore everything when window size is not in the range\n      // remove inserted <div>, classnames, styles and initialize ticking variables\n      destory: function () {\n        this.sticky.className = this.stickyClassNames;\n        this.sticky.style.width = '';\n        this.sticky.style[POSITION] = '';\n        gn.unwrap(this.jsWrapper);\n\n        if (this.isSticking) {\n          this.sticky.className = this.sticky.className.replace(' js-sticky', '');\n          this.sticky.style.position = '';\n          this.sticky.style.width = '';\n          this.sticky.style.top = '';\n          this.sticky.style.bottom = '';\n          this.isSticking = false;\n          this.isFixed = false;\n          this.isAbsolute = false;\n        }\n\n        this.isInRange = false;\n        this.isWrapped = false;\n        this.isSticking = false;\n        this.isFixed = false;\n        this.isAbsolute = false;\n      },\n\n      // check if the window size is in the range\n      checkRange: function () {\n        if (!BP) {\n          return true;\n        } else if (typeof BP === 'number') {\n          return WINDOWWIDTH >= BP;\n        } else if (Array.isArray(BP)) {\n          switch (BP.length) {\n            case 1:\n              return WINDOWWIDTH >= BP[0];\n            case 2:\n              return WINDOWWIDTH >= BP[0] && WINDOWWIDTH < BP[1];\n            case 3:\n              return WINDOWWIDTH >= BP[0] && WINDOWWIDTH < BP[1] || WINDOWWIDTH >= BP[2];\n            case 4:\n              return WINDOWWIDTH >= BP[0] && WINDOWWIDTH < BP[1] || WINDOWWIDTH >= BP[2] && WINDOWWIDTH < BP[3];\n          }\n        }\n      },\n\n      // init:\n      // check if the window is in the range\n      // if so, wrap sticky with new <div> and store size information\n      // otherwiseï¼unwrap <div> and initialize variables\n      init: function () {\n        this.isInRange = this.checkRange();\n\n        if (this.isInRange && !this.isWrapped) {\n          this.wrapSticky();\n          this.updateSizes();\n        } else if (!this.isInRange && this.isWrapped) {\n          this.destory();\n        }\n\n        if (this.isWrapped) {\n          this.stickyRectEdge = this.jsWrapper.getBoundingClientRect()[POSITION];\n          this.containerRectEdge = (CONTAINER) ? CONTAINER.getBoundingClientRect().bottom : false;\n\n          this.onScroll();\n          if (this.isSticking) { this.sticky.style.width = this.stickyWidth + 'px'; }\n        }\n      },\n\n      // onresize:\n      // same things with init, but always need to check size information to update sticky status,\n      // and update sticky width while it's pinned or following\n      onResize: function () {\n        if (window.innerWidth !== WINDOWWIDTH) { WINDOWWIDTH = window.innerWidth; }\n        if (window.innerHeight !== WINDOWHEIGHT) { WINDOWHEIGHT = window.innerHeight; }\n\n        this.init();\n\n        if (this.isWrapped) {\n          this.updateSizes();\n        }\n      },\n\n      // onscroll:\n      // change sticky status based on sticky / container scrollTop\n      // the adventage of using getBoundingClientRect().top instead of offsetTop is scope the sticky will not be affected by other element's height changing while scrolling\n      // e.g. when window scroll down, the header become fixed positioned, thus height property become 0\n      onScroll: function () {\n        if (this.stickyRectEdge > this.isFixedBreakpoint) {\n          // normal - non-sticky\n          // reset position, top, bottom, width, height\n          if (this.isSticking) {\n            this.sticky.className = this.sticky.className.replace(' js-sticky', '');\n            this.jsWrapper.style.height = '';\n            this.sticky.style.position = '';\n            this.sticky.style.width = '';\n            this.sticky.style.top = '';\n            this.sticky.style.bottom = '';\n            this.isSticking = false;\n            this.isFixed = false;\n            this.isAbsolute = false;\n          }\n        } else {\n          // add .js-sticky, set width, height\n          if (!this.isSticking) {\n            this.sticky.className += ' js-sticky';\n            this.sticky.style.width = this.stickyWidth + 'px';\n            this.jsWrapper.style.height = this.stickyHeight + 'px';\n            this.isSticking = true;\n          }\n\n          if (CONTAINER) {\n            if (!this.isFixed && this.stickyRectEdge <= this.isFixedBreakpoint && this.containerRectEdge > this.isAbsoluteBreakpoint) {\n              // fixed (with container):\n              // remove container relative-position\n              CONTAINER.style.position = '';\n              this.sticky.style.position = 'fixed';\n              this.sticky.style[POSITION] = PADDING + 'px';\n              if (POSITION === 'top') {\n                this.sticky.style.bottom = '';\n              }\n              this.isFixed = true;\n              this.isAbsolute = false;\n            } else if (!this.isAbsolute && this.containerRectEdge <= this.isAbsoluteBreakpoint) {\n              // absolute:\n              CONTAINER.style.position = 'relative';\n              this.sticky.style.position = 'absolute';\n              if (POSITION === 'top') {\n                this.sticky.style.top = '';\n                this.sticky.style.bottom = '0px';\n              }\n              this.isFixed = false;\n              this.isAbsolute = true;\n            }\n          } else {\n            // fixed (without container)\n            if (!this.isFixed && this.stickyRectEdge <= this.isFixedBreakpoint) {\n              this.sticky.style.position = 'fixed';\n              this.sticky.style[POSITION] = PADDING + 'px';\n              this.isFixed = true;\n            }\n          }\n        }\n      },\n    };\n\n    gn.ready(function () {\n      // get sticky elements on dom ready\n      var stickyEls = document.querySelectorAll(options.sticky),\n          arr = [];\n      // if not sticky element been found, do nothing\n      if (stickyEls.length === 0) { \n        throw new Error('\"' + options.sticky + '\" doesn\\'t exist.');\n      }\n\n      // get CONTAINER on dom ready\n      CONTAINER = (options.container) ? document.querySelector(options.container) : false;\n\n      for (var i = stickyEls.length; i--;) {\n        arr.push(new Core(stickyEls[i]));\n      }\n\n      // return sticky Array\n      return arr;\n    });\n  };\n\n})();"],"sourceRoot":"/source/"}